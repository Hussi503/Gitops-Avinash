name: build and push docker image to ecr
on:
  push:
    branches:
      - main
      
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
    
      - name: configure aws CLI
        run: |
           aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
           aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }}
           aws configure set region ${{ secrets.AWS_DEFAULT_REGION }}
      - name: login to ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com
    
      - name: build, tag and push docker image
        run: | 
          IMAGE_TAG="v-$(echo ${GITHUB_SHA} | cut -c1-7)"
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPO }}"
          echo "building image ${IMAGE_URI}:${IMAGE_TAG}"
          docker build -t ${IMAGE_URI}:${IMAGE_TAG} .
          docker tag ${IMAGE_URI}:${IMAGE_TAG} ${IMAGE_URI}:latest
          docker push ${IMAGE_URI}:${IMAGE_TAG}
          docker push ${IMAGE_URI}:latest
      
      - name: download the current task defination  
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEF_NAME }} --query taskDefinition > task-def.json

      - name: update container image
        run: |
          IMAGE_TAG=$IMAGE_URI:${IMAGE_TAG}
          jq --arg IMAGE "$NEW_IMAGE" --arg NAME "web" '
          .containerDefinitions |= map(if .name == $NAME then .image = $IMAGE else . end)' task-def.json > new-task-def.json

      - name: register new task definition
        id: Register
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://new-task-def.json --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN::$NEW_TASK_DEF_ARN"
      
      - name: update service to use new task definition
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_SERVICE_NAME }} --task-definition $NEW_TASK_DEF_ARN --force-new-deployment





      

  
  # cluster name: ghsecscluster
  # tdn: gha-cal-app
  # svc: calsvc



   
