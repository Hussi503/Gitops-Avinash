name: Build and Push Docker Image to ECR and Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_KEY }}
          aws configure set region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} \
          | docker login --username AWS --password-stdin \
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com

      - name: Build, tag and push Docker image
        run: |
          IMAGE_TAG="v-$(echo ${GITHUB_SHA} | cut -c1-7)"
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ secrets.AWS_ECR_REPO }}"
          echo "Building image ${IMAGE_URI}:${IMAGE_TAG}"
          docker build -t ${IMAGE_URI}:${IMAGE_TAG} .
          docker tag ${IMAGE_URI}:${IMAGE_TAG} ${IMAGE_URI}:latest
          docker push ${IMAGE_URI}:${IMAGE_TAG}
          docker push ${IMAGE_URI}:latest
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Download and clean current ECS task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ secrets.ECS_TASK_DEF_NAME }} \
            --query taskDefinition > task-def.json

          # Remove read-only fields that cause register-task-definition to fail
          jq 'del(
              .taskDefinitionArn,
              .revision,
              .status,
              .requiresAttributes,
              .compatibilities,
              .registeredAt,
              .registeredBy
          )' task-def.json > cleaned-task-def.json

      - name: Update container image in task definition
        run: |
          FULL_IMAGE="${IMAGE_URI}:${IMAGE_TAG}"
          jq --arg IMAGE "$FULL_IMAGE" --arg NAME "web" '
            .containerDefinitions |= map(
              if .name == $NAME then .image = $IMAGE else . end
            )
          ' cleaned-task-def.json > new-task-def.json

      - name: Register new ECS task definition
        id: register
        run: |
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "NEW_TASK_DEF_ARN=$NEW_TASK_DEF_ARN" >> $GITHUB_ENV
          echo "✅ Registered new task definition: $NEW_TASK_DEF_ARN"

      - name: Update ECS service to use new task definition
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --task-definition $NEW_TASK_DEF_ARN \
            --force-new-deployment
          echo "✅ ECS service updated successfully"
